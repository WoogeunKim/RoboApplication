@model IEnumerable<ModelsLibrary.Fproof.FproofVo>

@{
    ViewBag.Title = "원료 투입";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <h2>원료 투입</h2>

    <div class="row">
        <div class="col-sm-12">
            @(Html.DevExtreme().SelectBox().ID("selectBox").Name("LOT-NO : ").DataSource(d => d.WebApi().RouteName("PurRegWebApi").LoadAction("ProcLotNoookup").LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"] }).Key("PROC_LOT_NO")) .DisplayExpr("PROC_LOT_NO") .ValueExpr("PROC_LOT_NO") .SearchEnabled(true).OnValueChanged("lookup_valueChanged") )
        </div>

        @*<div class="col-sm-2">
            @(Html.DevExtreme().Toolbar().Items(items => {
                items.Add().Widget(w => w.Button().Icon("refresh").OnClick("refreshButton_click")).LocateInMenu(ToolbarItemLocateInMenuMode.Auto).Location(ToolbarItemLocation.Before);
            }))
        </div>*@

        <div class="row">
            <div class="col-sm-12">
                <br />
                <br />
                @(Html.DevExtreme().DataGrid<ModelsLibrary.Fproof.FproofVo>().ID("gridContainer")
                    .DataSource(d => d.WebApi().RouteName("PurRegWebApi").InsertAction(true).DeleteAction(true)
                    .LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"], CRE_USR_ID = Context.Session["USR_ID"], PROC_LOT_NO = new JS("function() { return LetzterBegriff; }") } )
                    .LoadAction("GetDtlSelect")
                    .InsertAction("GetDtlInsert")
                    .UpdateAction("GetDtlUpdate")
                    .DeleteAction("GetDtlDelete")
                    .Key("GBN")
    )
    //.RemoteOperations(true)
    .Columns(columns =>
    {
        columns.AddFor(m => m.CRE_USR_ID).Caption("사용자").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.UPD_USR_ID).Caption("사용자").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.CHNL_CD).Caption("채널").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.PROC_LOT_NO).Caption("PROC-LOT-NO").Width(150).Alignment(HorizontalAlignment.Left).Visible(false);


        @*columns.AddFor(m => m.A_FLG).Caption("마감").Width(40).AllowFiltering(false).AllowSorting(false).Alignment(HorizontalAlignment.Center).CellTemplate(@<text> <div> <img src="<%- value %>" alt=""/> </div> </text>);*@
        columns.AddFor(m => m.CLZ_FLG).Caption("마감").Width(40).Alignment(HorizontalAlignment.Center).AllowEditing(true).Visible(true);
        columns.AddFor(m => m.PROC_LOT_SEQ).Caption("번호").Width(80).Alignment(HorizontalAlignment.Center).AllowEditing(false).AllowHeaderFiltering(false);
        columns.AddFor(m => m.PRNT_LOT_NO).Caption("LOT-NO").Width(230).Alignment(HorizontalAlignment.Center);
        columns.AddFor(m => m.ROUT_ITM_CD).Caption("물품코드").Alignment(HorizontalAlignment.Left).AllowEditing(false);
        columns.AddFor(m => m.ITM_NM).Caption("투입원료").Alignment(HorizontalAlignment.Left).AllowEditing(false);
        columns.AddFor(m => m.ITM_USE_QTY).Caption("투입수량").Width(120).Format("###,###,##0.00").Alignment(HorizontalAlignment.Right).AllowHeaderFiltering(false);
        columns.AddFor(m => m.N1ST_UOM_NM).Caption("투입단위").Width(120).Alignment(HorizontalAlignment.Center).AllowEditing(false);
    })
    .OnInitNewRow("onInitNewRow")
    .Summary(s => s.TotalItems(totalItems => { totalItems.AddFor(m => m.PRNT_LOT_NO).SummaryType(SummaryType.Count); })
    .GroupItems(groupItems => {groupItems.Add().SummaryType(SummaryType.Count);}))
    .FilterRow(f => f.Visible(false))
    .ColumnAutoWidth(true)
    .Paging(p => p.PageSize(50))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(false))
    //.Scrolling(s => s.Mode(GridScrollingMode.Virtual))
    .ShowBorders(true)
    .Selection(s => s.Mode(SelectionMode.Single))
    //.HoverStateEnabled(true)
    .SearchPanel(sp => sp.Visible(false))
    .OnSelectionChanged("selectionChanged")
    .Editing(e => e.Mode(GridEditMode.Popup)
    //.AllowAdding(true)
    //.AllowUpdating(true)
    //.AllowDeleting(true)
    .Popup(p => p
                .Title("원료 투입")
                .ShowTitle(true)
                .Width(500)
                .Height(300)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .Of("#grid")
                //.Of(new JS("window"))
                )
            )
    .Texts(t => t
           .ConfirmDeleteMessage("삭제 하시겠습니까?")
        )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
                    .ColCount(1)
                    .Items(groupItems =>
                    {
                        //
                        //LOT-NO
                        groupItems.AddSimpleFor(m => m.PRNT_LOT_NO).Editor(c => c.TextBox().Width(260)).IsRequired(true);
                        //수량
                        groupItems.AddSimpleFor(m => m.ITM_USE_QTY).Editor(c => c.NumberBox().Width(260)).IsRequired(true);
                        //마감
                        groupItems.AddSimpleFor(m => m.CLZ_FLG).Editor(c => c.SelectBox().Width(260).Items(new[] { "N", "Y" }));

                        //
                        //사용자
                        groupItems.AddSimpleFor(m => m.CRE_USR_ID).Editor(c => c.TextBox().Width(260)).Visible(false);
                        groupItems.AddSimpleFor(m => m.UPD_USR_ID).Editor(c => c.TextBox().Width(260)).Visible(false);
                        //CHNL_CD
                        groupItems.AddSimpleFor(m => m.CHNL_CD).Editor(c => c.TextBox().Width(260)).Visible(false);
                        //PROC_LOT_NO
                        groupItems.AddSimpleFor(m => m.PROC_LOT_NO).Editor(c => c.TextBox().Width(260)).Visible(false);
                    });
            }))
        )
    )

    @(Html.DevExtreme().SpeedDialAction().ID("action-add").Icon("add").Label("Add").Index(1).OnClick("addRow"))
    @(Html.DevExtreme().SpeedDialAction().ID("action-remove").Icon("trash").Visible(false).Label("Delete").Index(2).OnClick("deleteRow"))   
    @(Html.DevExtreme().SpeedDialAction().ID("action-edit").Icon("edit").Visible(false).Label("Edit").Index(3).OnClick("editRow"))
    @(Html.DevExtreme().SpeedDialAction().ID("action-refersh").Icon("search").Label("Refersh").OnClick("refershRow"))

            </div>
        </div>
    </div>

    <script type="text/javascript">
        var ClzFlg = false;
        var LetzterBegriff = '';

        var refershRow = function () {
            LetzterBegriff = $("#selectBox").dxSelectBox("instance").option("value");
            $("#gridContainer").dxDataGrid("getDataSource").reload();
            DevExpress.ui.notify("PROC_LOT_NO : " + LetzterBegriff);
        }

        function onInitNewRow(e) {
            e.data.CRE_USR_ID = '@Context.Session["USR_ID"].ToString()';
            e.data.UPD_USR_ID = '@Context.Session["USR_ID"].ToString()';
            e.data.CHNL_CD = '@Context.Session["CHNL_CD"].ToString()';

            e.data.PROC_LOT_NO = $("#selectBox").dxSelectBox("instance").option("value");

            e.data.ITM_USE_QTY = '0';
            e.data.CLZ_FLG = 'N';

            ClzFlg = false;
            //alert(ClzFlg);
        }

        //function onEditingStart(e)
        //{
        //    ClzFlg = true;
        //    alert(ClzFlg);
        //    //$('PRNT_LOT_NO').hide();
        //    //$('ITM_USE_QTY').hide();
        //    //$('CLZ_FLG').hide();

        //}

        function lookup_valueChanged(data) {
            LetzterBegriff = data.value;
            $("#gridContainer").dxDataGrid("getDataSource").reload();
            DevExpress.ui.notify("PROC_LOT_NO : " + LetzterBegriff);
        }


        var selectedRowIndex = -1;

        var selectionChanged = function (e) {
            selectedRowIndex = e.component.getRowIndexByKey(e.selectedRowKeys[0]);

            $("#action-remove").dxSpeedDialAction("instance").option("visible", selectedRowIndex !== -1);
            $("#action-edit").dxSpeedDialAction("instance").option("visible", selectedRowIndex !== -1);
        }

        var getGridInstance = function () {
            return $("#gridContainer").dxDataGrid("instance");
        }

        var addRow = function () {
            getGridInstance().addRow();
            getGridInstance().deselectAll();
        }

        var editRow = function () {
            getGridInstance().editRow(selectedRowIndex);
            getGridInstance().deselectAll();
        }

        var deleteRow = function () {
            getGridInstance().deleteRow(selectedRowIndex);
            getGridInstance().deselectAll();
        }



        $(function () {
            //var productsStore = $("#gridContainer").dxDataGrid("getDataSource").store();
            setInterval(function () {
                //    //if (orders.length > 500000) {
                //    //    return;
                //    //}

                //for (var i = 0; i < updatesPerSecond / 20; i++)
                //{
                //    addOrder(productsStore);
                $("#gridContainer").dxDataGrid("getDataSource").reload();
                //}

            }, 15000);
        });

     </script>
