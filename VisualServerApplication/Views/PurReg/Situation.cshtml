@model IEnumerable<ModelsLibrary.Fproof.FproofVo>

@{
    ViewBag.Title = "LOT별 재고현황";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <h2>LOT별 재고현황</h2>

    <div class="row">
        <div class="col-md-pull-12">
            @(Html.DevExtreme().DataGrid<ModelsLibrary.Fproof.FproofVo>()
            .ID("gridContainer")
            .DataSourceOptions(o => o.ReshapeOnPush(true))
            .RepaintChangesOnly(true)
            .ColumnAutoWidth(true)
            .ShowBorders(true)
            .DataSource(d => d.WebApi().RouteName("PurRegWebApi")
            .LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"], CRE_USR_ID = Context.Session["USR_ID"] })
            .LoadAction("GetMstSelect")
            .Key("MTRL_LOT_NO")
    )
    .Columns(columns =>
    {
        columns.AddFor(m => m.PRNT_LOT_NO).Caption("(원)LOT-NO").Width(150).Alignment(HorizontalAlignment.Center).HidingPriority(0).AllowEditing(false);
        columns.AddFor(m => m.CO_LOT_NO).Caption("LOT-NO").Width(150).Alignment(HorizontalAlignment.Center).AllowEditing(false);
        columns.AddFor(m => m.ITM_CD).Caption("품번").Alignment(HorizontalAlignment.Center).AllowEditing(false);
        columns.AddFor(m => m.ITM_NM).Caption("품명").Alignment(HorizontalAlignment.Left).AllowEditing(false);
        columns.AddFor(m => m.N1ST_ITM_GRP_NM).Caption("대 분류").Alignment(HorizontalAlignment.Center).AllowEditing(false);
        columns.AddFor(m => m.ITM_SZ_NM).Caption("규격").Alignment(HorizontalAlignment.Left).AllowEditing(false);
        columns.AddFor(m => m.UOM_NM).Caption("단위").Alignment(HorizontalAlignment.Center).AllowEditing(false);
        columns.AddFor(m => m.ITM_QTY).Caption("수량(KG)").Width(100).Format("###,###,##0.00").Alignment(HorizontalAlignment.Right).AllowEditing(false).AllowHeaderFiltering(false);
        columns.AddFor(m => m.SFSTK_QTY).Caption("안전재고").Width(100).HidingPriority(1).Format("###,###,##0").Alignment(HorizontalAlignment.Right).AllowEditing(false).AllowHeaderFiltering(false);
        columns.AddFor(m => m.CO_NO).Caption("매입처").Alignment(HorizontalAlignment.Left).AllowEditing(false);

        columns.AddFor(m => m.ITM_IN_DT).Caption("입고일자").Width(120).Alignment(HorizontalAlignment.Center).HidingPriority(2);
        columns.AddFor(m => m.MTRL_MAKE_DT).Caption("제조일자").Width(80).Alignment(HorizontalAlignment.Center).HidingPriority(3).AllowEditing(false);
        columns.AddFor(m => m.MTRL_EXP_DT).Caption("유효기간(일수)").Width(80).Alignment(HorizontalAlignment.Center).HidingPriority(4).AllowEditing(false);
        columns.AddFor(m => m.RMN_QTY).Caption("잔량").Format("###,###,##0").Width(80).Alignment(HorizontalAlignment.Right).AllowEditing(false).AllowHeaderFiltering(false);

    })
    .Summary(s => s.TotalItems(totalItems => { totalItems.Add().SummaryType(SummaryType.Count).Column("RMN_QTY"); })
    .GroupItems(groupItems => {groupItems.Add().SummaryType(SummaryType.Count);}))
    //.FilterRow(f => f.Visible(false))
    .ColumnAutoWidth(true)
    //.Paging(p => p.PageSize(50))
    //.HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    //.Scrolling(s => s.Mode(GridScrollingMode.Virtual))
    .ShowBorders(true)
    .Selection(s => s.Mode(SelectionMode.Single))
    //.HoverStateEnabled(true)
    .SearchPanel(sp => sp.Visible(true))
    )

        </div>
        @*<div class="options">
            <div class="caption">Options</div>
            <div class="option">
                <span>초 : </span>
                @(Html.DevExtreme().Slider()
            .ID("frequency-slider")
            .Min(10)
            .Max(5000)
            .Step(10)
            .Value(new JS("updatesPerSecond"))
            .OnValueChanged("frequencyChanged")
            .Tooltip(t => t
                .Enabled(true)
                .ShowMode(SliderTooltipShowMode.Always)
                .Format("#0 per second")
                .Position(VerticalEdge.Top)
            )
        )
            </div>
        </div>*@
    </div>

<script type="text/javascript">
    //function getDetailGridDataSource(key) {
    //    return {
    //        store: ordersStore,
    //        filter: ["ProductID", "=", key],
    //        reshapeOnPush: true
    //    }
    //}

    //function getAmount(order) {
    //    return order.UnitPrice * order.Quantity;
    //}

    //function frequencyChanged(e) {
    //    updatesPerSecond = e.value;
    //}

    //var updatesPerSecond = 100;

    $(function () {
        //var productsStore = $("#gridContainer").dxDataGrid("getDataSource").store();
        setInterval(function () {
        //    //if (orders.length > 500000) {
        //    //    return;
        //    //}

            //for (var i = 0; i < updatesPerSecond / 20; i++)
            //{
            //    addOrder(productsStore);
                $("#gridContainer").dxDataGrid("getDataSource").reload();
            //}

        }, 15000);
    });
</script>

