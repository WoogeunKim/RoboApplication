@model IEnumerable<ModelsLibrary.Fproof.FproofVo>

@{
    ViewBag.Title = "원재료 매입 등록";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>원재료 매입 등록</h2>

<div class="row">
    <div class="col-md-pull-12">
        @(Html.DevExtreme().DataGrid<ModelsLibrary.Fproof.FproofVo>()
        .ID("grid")
        .DataSource(d => d.WebApi().RouteName("PurRegWebApi").InsertAction(true).UpdateAction(true)
        .LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"], CRE_USR_ID = Context.Session["USR_ID"] })
        .LoadAction("GetMstSelect")
        .InsertAction("GetMstInsert")
        .UpdateAction("GetMstUpdate")
        //.DeleteAction("DeleteOrder")
        .Key("MTRL_LOT_NO")
    )
    //.RemoteOperations(true)
    .Columns(columns =>
    {
        columns.AddFor(m => m.CRE_USR_ID).Caption("사용자").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.UPD_USR_ID).Caption("사용자").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.CHNL_CD).Caption("채널").Width(150).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.MTRL_LOT_NO).Caption("LOT-NO").Width(150).Alignment(HorizontalAlignment.Left).Visible(false);
        columns.AddFor(m => m.MTRL_MAKE_DT).Caption("제조일자").Width(80).Alignment(HorizontalAlignment.Center).Visible(false);
        columns.AddFor(m => m.MTRL_EXP_DY).Caption("유효기간(일수)").Width(80).Alignment(HorizontalAlignment.Left).Visible(false);

        columns.AddFor(m => m.ITM_IN_DT).Caption("입고일자").Width(120).Alignment(HorizontalAlignment.Center);
        columns.AddFor(m => m.PRNT_LOT_NO).Caption("(원)LOT-NO").Width(150).Alignment(HorizontalAlignment.Center);
        columns.AddFor(m => m.CO_NO).Caption("매입처").Alignment(HorizontalAlignment.Left).Lookup(lookup => lookup.DataSource(d => d.WebApi().RouteName("PurRegWebApi").LoadAction("CoNmLookup").LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"] }).Key("CO_NO")).ValueExpr("CO_NO").DisplayExpr("CO_NM"));
        columns.AddFor(m => m.ITM_CD).Caption("품명").Alignment(HorizontalAlignment.Left).Lookup(lookup => lookup.DataSource(d => d.WebApi().RouteName("PurRegWebApi").LoadAction("ItmNmLookup").LoadParams(new { CHNL_CD = Context.Session["CHNL_CD"] }).Key("ITM_CD")).ValueExpr("ITM_CD").DisplayExpr(new JS("lookup_displayExpr")));
        columns.AddFor(m => m.ITM_SZ_NM).Caption("규격").Width(120).Alignment(HorizontalAlignment.Left).AllowEditing(false);
        columns.AddFor(m => m.ITM_QTY).Caption("수량").Width(100).Format("###,###,##0.00").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.CO_LOT_NO).Caption("LOT-NO").Width(150).Alignment(HorizontalAlignment.Left).AllowEditing(false);
    })
    .OnInitNewRow("onInitNewRow")
    //.OnEditorPreparing("onEditingStart")totalItems.AddFor(m => m.SL_ITM_RMK).SummaryType(SummaryType.Count);
    .Summary(s => s.TotalItems(totalItems => { totalItems.AddFor(m => m.PRNT_LOT_NO).SummaryType(SummaryType.Count); })
    .GroupItems(groupItems => {groupItems.Add().SummaryType(SummaryType.Count);}))
    .FilterRow(f => f.Visible(false))
    .ColumnAutoWidth(true)
    .Paging(p => p.PageSize(50))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    //.Scrolling(s => s.Mode(GridScrollingMode.Virtual))
    .ShowBorders(true)
    .Selection(s => s.Mode(SelectionMode.Single))
    //.HoverStateEnabled(true)
    .SearchPanel(sp => sp.Visible(true))
    .OnSelectionChanged("selectionChanged")
    .Editing(e => e.Mode(GridEditMode.Popup)
    //.AllowAdding(true)
    //.AllowUpdating(true)
    .Popup(p => p
                .Title("원재료 매입등록")
                .ShowTitle(true)
                .Width(500)
                .Height(550)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .Of("#grid")
                //.Of(new JS("window"))
                )
            )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
                    .ColCount(1)
                    .Items(groupItems =>
                    {
                        //
                        //LOT-NO
                        groupItems.AddSimpleFor(m => m.CO_LOT_NO).Editor(c => c.TextBox().Width(260).Disabled(true));
                        //(원)LOT-NO
                        groupItems.AddSimpleFor(m => m.PRNT_LOT_NO).Editor(c => c.TextBox().Width(260)).IsRequired(true);
                        //품번
                        groupItems.AddSimpleFor(m => m.ITM_CD).Editor(c => c.Lookup().Width(260)).IsRequired(true);
                        //매입처
                        groupItems.AddSimpleFor(m => m.CO_NO).Editor(c => c.Lookup().Width(260)).IsRequired(true);
                        //제조일자
                        groupItems.AddSimpleFor(m => m.MTRL_MAKE_DT).Editor(c => c.DateBox().PickerType(DateBoxPickerType.Rollers).DisplayFormat("yyyy-MM-dd")).IsRequired(true);
                        //유효기간(일수)
                        groupItems.AddSimpleFor(m => m.MTRL_EXP_DY).Editor(c => c.NumberBox().Width(260)).IsRequired(true);
                        //입고일자
                        groupItems.AddSimpleFor(m => m.ITM_IN_DT).Editor(c => c.DateBox().PickerType(DateBoxPickerType.Rollers).DisplayFormat("yyyy-MM-dd")).IsRequired(true);
                        //수량
                        groupItems.AddSimpleFor(m => m.ITM_QTY).Editor(c => c.NumberBox().Width(260)).IsRequired(true);

                        //
                        //사용자
                        groupItems.AddSimpleFor(m => m.CRE_USR_ID).Editor(c => c.TextBox().Width(260)).Visible(false);
                        groupItems.AddSimpleFor(m => m.UPD_USR_ID).Editor(c => c.TextBox().Width(260)).Visible(false);
                        //CHNL_CD
                        groupItems.AddSimpleFor(m => m.CHNL_CD).Editor(c => c.TextBox().Width(260)).Visible(false);
                        //MTRL_LOT_NO
                        groupItems.AddSimpleFor(m => m.MTRL_LOT_NO).Editor(c => c.TextBox().Width(260)).Visible(false);
                    });

                //items.AddGroup()
                //    .Caption("Home Address")
                //    .ColCount(2)
                //    .ColSpan(2)
                //    .Items(groupItems =>
                //    {
                //        groupItems.AddSimpleFor(m => m.StateID);
                //        groupItems.AddSimpleFor(m => m.Address);
                //    });
            })
            )
        )

    )
        @(Html.DevExtreme().SpeedDialAction().ID("action-add").Icon("add").Label("Add").Index(1).OnClick("addRow"))
        @(Html.DevExtreme().SpeedDialAction().ID("action-edit").Icon("edit").Visible(false).Label("Edit").Index(2).OnClick("editRow"))


    </div>
</div>

<script type="text/javascript">
    function onInitNewRow(e) {
        e.data.CRE_USR_ID = '@Context.Session["USR_ID"].ToString()';
        e.data.UPD_USR_ID = '@Context.Session["USR_ID"].ToString()';
        e.data.CHNL_CD = '@Context.Session["CHNL_CD"].ToString()';

        e.data.MTRL_MAKE_DT = '@System.DateTime.Now.ToString("yyyy-MM-dd")';
        e.data.ITM_IN_DT = '@System.DateTime.Now.ToString("yyyy-MM-dd")';
        e.data.MTRL_EXP_DY = '0';
        e.data.ITM_QTY = '0';
    }
    @*function onEditingStart(e) {
        e.data.CRE_USR_ID = '@Context.Session["USR_ID"].ToString()';
        e.data.UPD_USR_ID = '@Context.Session["USR_ID"].ToString()';
        e.data.CHNL_CD = '@Context.Session["CHNL_CD"].ToString()';
    }*@

    var selectedRowIndex = -1;

    var selectionChanged = function (e) {
        selectedRowIndex = e.component.getRowIndexByKey(e.selectedRowKeys[0]);

        //$("#action-remove").dxSpeedDialAction("instance").option("visible", selectedRowIndex !== -1);
        $("#action-edit").dxSpeedDialAction("instance").option("visible", selectedRowIndex !== -1);
    }

    var getGridInstance = function () {
        return $("#grid").dxDataGrid("instance");
    }

    var addRow = function () {
        getGridInstance().addRow();
        getGridInstance().deselectAll();
    }

    var editRow = function () {
        getGridInstance().editRow(selectedRowIndex);
        getGridInstance().deselectAll();
    }

    var directionChanged = function (e) {
        DevExpress.config({
            floatingActionButtonConfig: directions[e.selectedItem]
        });

        DevExpress.ui.repaintFloatingActionButton();
    }

    function lookup_displayExpr(item) {
        if (!item) {
            return "";
        }

        return item.ITM_NM + " / " + item.UOM_NM;
    }

</script>